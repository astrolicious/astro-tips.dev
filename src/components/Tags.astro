---
import { CardGrid, LinkCard } from "@astrojs/starlight/components";
import { getCollection } from "astro:content";

interface Props {
  tags?: string[];
}
const allResources = await getCollection("resources");

// Set is used to remove duplicates
const allTags = Array.from(
  new Set(allResources.flatMap((resource) => resource.data.tags ?? []))
);
const { tags } = Astro.props;

// Determine which tags to display
const filteredTags =
  tags && tags.length > 0
    ? allTags.filter((tag) => tags.includes(tag))
    : allTags;
---

<style>
  .tag {
    display: inline-block;
    background-color: #f0f0f0;
    color: #333;
    padding: 0.5em 1em;
    margin: 0.5em;
    border-radius: 0.25em;
    font-size: 0.875em;
    text-transform: capitalize;
  }
  .tags-container {
    display: flex;
    flex-wrap: wrap;
  }
</style>

<div class="tags-container not-content">
  {
    filteredTags.map((tag) => (
      <div>
        <input type="checkbox" id={tag} class="tag" />
        <label for={tag}>{tag}</label>
      </div>
    ))
  }
</div>

<CardGrid />

<script is:inline type="module">
  async function fetchPartial(tags) {
    if (tags.length === 0)
      return await fetch("/api/tags").then((res) => res.text());
    const params = new URLSearchParams();
    params.set("tags", tags.join(","));
    return await fetch(`/api/tags?${params.toString()}`).then((res) =>
      res.text()
    );
  }

  document
    .querySelector(".tags-container")
    .addEventListener("change", async (event) => {
      const tags = Array.from(
        document.querySelectorAll(".tag:checked"),
        (checkbox) => checkbox.id
      );
      document.querySelector(".card-grid").innerHTML = await fetchPartial(tags);
      const params = new URLSearchParams(window.location.search);
      params.set("tags", tags.join(","));
      // window.location.search = params.toString();
      window.history.pushState({}, "", `?${params.toString()}`);
    });

  const params = new URLSearchParams(window.location.search);
  const currentTags = params.get("tags");
  if (currentTags === null) {
    document.querySelector(".card-grid").innerHTML = await fetchPartial([]);
  }

  if (currentTags.length !== 0) {
    let splittedTags = currentTags.split(",");
    document.querySelector(".card-grid").innerHTML = "";
    splittedTags.forEach((tag) => {
      document.getElementById(tag).checked = true;
    });
    document.querySelector(".card-grid").innerHTML =
      await fetchPartial(splittedTags);
  }
</script>
